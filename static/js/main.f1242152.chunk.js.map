{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","img","width","frame","animation","className","style","transition","map","im","src","alt","App","state","images","itemWidth","frameSize","step","animationDuration","scrollRight","carousel","document","querySelector","scrollLeft","this","length","method","type","id","onChange","event","setState","target","value","placeholder","onClick","React","Component","ReactDOM","render","getElementById"],"mappings":"uPAkBeA,EARmB,SAAC,GAAD,IAChCC,EADgC,EAChCA,IAAKC,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,MAAOC,EADa,EACbA,UADa,OAGhC,oBAAIC,UAAU,iBAAiBC,MAAO,CAAEJ,MAAM,GAAD,OAAKC,EAAQD,EAAb,MAAwBK,WAAW,GAAD,OAAKH,IAApF,SACGH,EAAIO,KAAI,SAAAC,GAAE,OAAI,oBAAIJ,UAAU,uBAAd,SAA8C,qBAAKK,IAAKD,EAAIE,IAAKF,EAAIP,MAAOA,KAAlCO,SCFvDG,E,4MACJC,MAAQ,CACNC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFC,UAAW,IACXC,UAAW,EACXC,KAAM,EACNC,kBAAmB,K,EAGrBC,YAAc,WACZ,IAAMC,EAAWC,SAASC,cAAc,mBAEvB,OAAbF,IACFA,EAASG,YAAc,EAAKV,MAAMI,KAAO,EAAKJ,MAAME,Y,EAIxDQ,WAAa,WACX,IAAMH,EAAWC,SAASC,cAAc,mBAEvB,OAAbF,IACFA,EAASG,YAAc,EAAKV,MAAMI,KAAO,EAAKJ,MAAME,Y,4CAIxD,WAAU,IAAD,OACP,EAEIS,KAAKX,MADPC,EADF,EACEA,OAAQC,EADV,EACUA,UAAWC,EADrB,EACqBA,UAAWE,EADhC,EACgCA,kBAGhC,OACE,sBAAKb,UAAU,MAAf,UAEE,gDAAmBS,EAAOW,OAA1B,aACA,uBAAMC,OAAO,MAAMrB,UAAU,YAA7B,yBAEE,uBACEsB,KAAK,SACLC,GAAG,QACHC,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEhB,WAAYe,EAAME,OAAOC,WAN/C,8BAUE,uBACEN,KAAK,SACLC,GAAG,kBACHC,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEf,WAAYc,EAAME,OAAOC,WAd/C,uCAkBE,uBACEN,KAAK,SACLC,GAAG,iBACHC,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEd,MAAOa,EAAME,OAAOC,WAtB1C,sBA0BE,uBACEN,KAAK,SACLO,YAAY,KACZN,GAAG,YACHC,SAAU,SAACC,GACT,EAAKC,SAAS,CAAEb,mBAAoBY,EAAME,OAAOC,cAIvD,sBAAK5B,UAAU,WAAf,UACE,cAAC,EAAD,CACEJ,IAAKa,EACLZ,MAAOa,EACPZ,MAAOa,EACPZ,UAAWc,IAGb,wBAAQS,KAAK,SAASQ,QAASX,KAAKD,WAAYlB,UAAU,SAA1D,SACE,qBAAKA,UAAU,wCAEjB,wBAAQsB,KAAK,SAASQ,QAASX,KAAKL,YAAad,UAAU,SAA3D,SACE,qBAAKA,UAAU,mD,GA5FT+B,IAAMC,WAoGTzB,IC7Gf0B,IAASC,OAAO,cAAC,EAAD,IAASlB,SAASmB,eAAe,W","file":"static/js/main.f1242152.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  img: string[]\n  width: number,\n  frame: number,\n  animation: number,\n};\n\nconst Carousel: React.FC<Props> = ({\n  img, width, frame, animation,\n}) => (\n  <ul className=\"Carousel__list\" style={{ width: `${frame * width}px`, transition: `${animation}` }}>\n    {img.map(im => <li className=\"Carousel__list--item\" key={im}><img src={im} alt={im} width={width} /></li>)}\n  </ul>\n);\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  scrollRight = () => {\n    const carousel = document.querySelector('.Carousel__list');\n\n    if (carousel !== null) {\n      carousel.scrollLeft += this.state.step * this.state.itemWidth;\n    }\n  };\n\n  scrollLeft = () => {\n    const carousel = document.querySelector('.Carousel__list');\n\n    if (carousel !== null) {\n      carousel.scrollLeft -= this.state.step * this.state.itemWidth;\n    }\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, animationDuration,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <form method=\"get\" className=\"App__form\">\n          Photo width:\n          <input\n            type=\"number\"\n            id=\"width\"\n            onChange={(event) => {\n              this.setState({ itemWidth: +event.target.value });\n            }}\n          />\n          Number of images displayed:\n          <input\n            type=\"number\"\n            id=\"imagesDisplayed\"\n            onChange={(event) => {\n              this.setState({ frameSize: +event.target.value });\n            }}\n          />\n          Number of images scrolled per click:\n          <input\n            type=\"number\"\n            id=\"imagesScrolled\"\n            onChange={(event) => {\n              this.setState({ step: +event.target.value });\n            }}\n          />\n          Animation duration:\n          <input\n            type=\"number\"\n            placeholder=\"ms\"\n            id=\"animation\"\n            onChange={(event) => {\n              this.setState({ animationDuration: +event.target.value });\n            }}\n          />\n        </form>\n        <div className=\"Carousel\">\n          <Carousel\n            img={images}\n            width={itemWidth}\n            frame={frameSize}\n            animation={animationDuration}\n          />\n\n          <button type=\"button\" onClick={this.scrollLeft} className=\"button\">\n            <div className=\"button__arrow button__arrow--left\" />\n          </button>\n          <button type=\"button\" onClick={this.scrollRight} className=\"button\">\n            <div className=\"button__arrow button__arrow--right\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}